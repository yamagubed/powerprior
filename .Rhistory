help(powerprior)
library(testthat)
library(powerprior)
library(MASS)
ls("package:powerprior")
?powerprior
?powerprior_multivariate
?powerprior_univariate
?sample_posterior_multivariate
?powerprior_multivariate
?powerprior_univariate
?sample_posterior_multivariate
install.packages("roxygen2")
install.packages("roxygen2")
install.packages("devtools")
setwd("C:/path/to/powerprior")
getwd()
devtools::document()
devtools::install()
library(powerprior)
?powerprior_univariate
library(powerprior)
?powerprior_univariate
list.files("man/")
devtools::document()
list.files("man/")
devtools::install()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::clean_source()
unlink("man/", recursive = TRUE)
devtools::document()
cat(readLines("NAMESPACE"), sep = "\n")
?powerprior_univariate
list.files("R/", pattern = "\\.r$")
grep("^print\\.", readLines("R/univariate.r"), value = TRUE)
grep("^print\\.", readLines("R/multivariate.r"), value = TRUE)
# Delete NAMESPACE and man/ folder
unlink("NAMESPACE")
unlink("man/", recursive = TRUE)
# Regenerate
devtools::document()
?powerprior_univariate
devtools::document()
cat(readLines("R/multivariate.r")[1:50], sep = "\n")
devtools::document()
devtools::clean_source()
unlink("man/", recursive = TRUE)
devtools::document()
?powerprior_univariate
devtools::document()
?powerprior_univariate
devtools::document()
devtools::document()
devtools::document()
?powerprior_univariate
?powerprior_multivariate
?powerprior_multivariate
unlink("man/", recursive = TRUE)
devtools::document()
?powerprior_multivariate
devtools::document()
devtools::document()
devtools::document()
unlink("man/", recursive = TRUE)
devtools::document()
?powerprior_univariate
unlink("man/", recursive = TRUE)
devtools::document()
devtools::test()
rm(list = ls("package:powerprior", all.names = TRUE), pos = "package:powerprior")
unlink("man/", recursive = TRUE)
unlink("NAMESPACE")
devtools::document()
devtools::load_all()
devtools::test()
devtools::document()
unlink("man/", recursive = TRUE)
unlink("NAMESPACE")
devtools::document()
cat(readLines("NAMESPACE"), sep = "\n")
devtools::load_all()
devtools::test()
devtools::check()
devtools::document()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
unlink("examples", recursive = TRUE)
devtools::document()
devtools::check()
file.remove("LICENSE.md")
file.exists("LICENSE")
file.exists("LICENSE")
file.exists("LICENSE.md")
devtools::document()
devtools::check()
cat("MIT License\n\nCopyright (c) 2024\n\nPermission is hereby granted...",
file = "LICENSE")
file.create("LICENSE")
file.remove("LICENSE")
cat('MIT License
Copyright (c) 2024 Yusuke Yamaguchi
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.', file = "LICENSE")
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
file.remove("LICENSE")
writeLines('MIT License
Copyright (c) 2024 Yusuke Yamaguchi
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.', con = "LICENSE")
devtools::document()
devtools::document()
devtools::check()
unlink("man/", recursive = TRUE)
devtools::document()
devtools::check()
file.remove("LICENSE")
writeLines('MIT License
Copyright (c) 2024 Yusuke Yamaguchi
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.', "LICENSE")
unlink("man/", recursive = TRUE)
devtools::document()
devtools::check()
unlink("man/", recursive = TRUE)
devtools::document()
devtools::check()
devtools::document()
description_content <- "Package: powerprior
Version: 1.0.0
Title: Conjugate Power Priors for Bayesian Analysis of Normal Data
Authors@R: c(
person(given  = \"Yusuke\",
family = \"Yamaguchi\",
role   = c(\"aut\",\"cre\"),
email  = \"yamagubed@gmail.com\"),
person(given  = \"Yifei\",
family = \"Huang\",
role   = c(\"aut\")))
Description: Power priors provide a flexible framework for incorporating historical data
in Bayesian analysis by discounting the historical likelihood with a power
parameter. However, due to the complexity of the posterior distribution,
Markov Chain Monte Carlo sampling is typically required to generate a
representative sample for subsequent inferences. This becomes especially
computationally intensive when the application needs repeated posterior
sampling, such as Monte Carlo simulation studies. 'powerprior' is a package
to implement conjugate representations of power priors for efficient
Bayesian analysis of normal data and to provide closed-form computation of power
priors and posterior distributions for both univariate (Normal-Inverse-Chi-squared)
and multivariate (Normal-Inverse-Wishart) normal data.
License: file LICENSE
Encoding: UTF-8
Roxygen: list(markdown = TRUE)
RoxygenNote: 7.3.3
Imports:
stats,
MASS,
LaplacesDemon,
ggplot2,
shiny,
shinydashboard,
shinyjs,
DT,
dplyr,
tidyr,
rlang
Suggests:
testthat (>= 3.0.0),
rmarkdown
"
# Write the file with UTF-8 encoding
writeLines(description_content, "DESCRIPTION", useBytes = TRUE)
# Verify the file was created
cat("DESCRIPTION file created successfully.\n")
devtools::document()
devtools::check()
unlink("man/", recursive = TRUE)
devtools::document()
devtools::check()
devtools::build()
unlink("man/", recursive = TRUE)
devtools::document()
unlink("man/", recursive = TRUE)
devtools::document()
